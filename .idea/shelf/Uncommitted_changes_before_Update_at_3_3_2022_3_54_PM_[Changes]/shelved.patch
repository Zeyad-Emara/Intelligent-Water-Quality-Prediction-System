Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import sys\r\nfrom template import Ui_MainWindow\r\n# from PyQt6 import QtCore as qtc\r\nfrom PyQt6 import QtWidgets as qtw\r\n\r\n# for exe file compilation\r\nimport sklearn.utils._typedefs\r\n\r\n\r\nfrom matplotlib.backends.backend_qtagg import (FigureCanvasQTAgg, NavigationToolbar2QT as NavigationToolbar)\r\nfrom matplotlib.figure import Figure\r\n\r\nimport numpy as np\r\nimport pandas as pd\r\n# import matplotlib.pyplot as plt\r\n\r\nfrom sklearn.preprocessing import StandardScaler\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.svm import SVC\r\n\r\n\r\nclass Window(qtw.QMainWindow):\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        super(Window, self).__init__(*args, **kwargs)\r\n        self.ui = Ui_MainWindow()\r\n        self.ui.setupUi(self)\r\n        self.resize(1000, 650)\r\n        self.std = None\r\n\r\n        # Your code starts here\r\n        self.filePath = None\r\n        self.predict_input = None\r\n        self.predict_value = None\r\n        self.reg = None\r\n        self.data_frame = None\r\n\r\n        # Update statusbar\r\n        self.ui.statusbar.showMessage(\"No dataset found\")\r\n\r\n        # Draw canvas and Toolbar\r\n        self.layout = qtw.QVBoxLayout()\r\n        self.static_canvas = FigureCanvasQTAgg(Figure(figsize=(10, 10)))\r\n        self.layout.addWidget(NavigationToolbar(self.static_canvas, self))\r\n        self.graph = self.static_canvas.figure.subplots()\r\n        self.layout.addWidget(self.static_canvas)\r\n        self.ui.graphWidget.setLayout(self.layout)\r\n\r\n        # add import button function\r\n        self.ui.importPushButton.clicked.connect(self.find_csv)\r\n\r\n        # add predicting value function\r\n        self.ui.predictPushButton.clicked.connect(self.prediction)\r\n\r\n        # set result display area read only\r\n        self.ui.resultOutput.setReadOnly(True)\r\n\r\n        # Your code ends here\r\n        self.show()\r\n\r\n    def find_csv(self):\r\n        try:\r\n            self.filePath = qtw.QFileDialog.getOpenFileName(filter=\"csv (*.csv)\")[0]\r\n            self.build_model()\r\n        except:\r\n            self.ui.statusbar.showMessage(\"No dataset selected\")\r\n\r\n    def build_model(self):\r\n        df = pd.read_csv(self.filePath, encoding='utf-8')\r\n        df_dropna = df.dropna()\r\n        X = df_dropna.iloc[:, 0:-1]\r\n        y = df_dropna.iloc[:, -1]\r\n        self.std = StandardScaler()\r\n        X = self.std.fit_transform(X.values)\r\n        X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=89)\r\n        self.reg = SVC()\r\n        self.reg.fit(X_train, y_train)\r\n        self.data_frame = df\r\n        self.plot_graph()\r\n        self.statusBar().showMessage(\"\")\r\n\r\n    def plot_graph(self):\r\n        columns = list(self.data_frame.columns)\r\n        df = pd.read_csv(self.filePath, usecols=columns)\r\n        df.plot(ax=self.graph)\r\n        self.static_canvas.draw()\r\n\r\n    def prediction(self):\r\n        try:\r\n            value = self.read_table_data()\r\n            value = np.array(value).reshape(1, -1)\r\n            self.predict_input = self.std.transform(value)\r\n            self.predict_value = self.reg.predict(self.predict_input)\r\n            self.ui.resultOutput.clear()\r\n            self.ui.resultOutput.insertPlainText(str(self.predict_value[0]))\r\n        except:\r\n            self.ui.statusbar.showMessage(\"\")\r\n\r\n    def read_table_data(self):\r\n        item = []\r\n        row_count = self.ui.predictionTableWidget.rowCount()\r\n        for row in range(row_count):\r\n            item.append(float(self.ui.predictionTableWidget.item(row, 0).text()))\r\n        return item\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    app = qtw.QApplication(sys.argv)\r\n    window = Window()\r\n    sys.exit(app.exec())\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision fa50235912af79269f75aab8560b352d38f38ebf)
+++ b/main.py	(date 1646293881931)
@@ -62,7 +62,8 @@
         try:
             self.filePath = qtw.QFileDialog.getOpenFileName(filter="csv (*.csv)")[0]
             self.build_model()
-        except:
+        except Exception as e:
+            print(e)
             self.ui.statusbar.showMessage("No dataset selected")
 
     def build_model(self):
